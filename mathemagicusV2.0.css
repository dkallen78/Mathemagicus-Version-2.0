/*
Styles the play area where the game takes place*/
#playArea {
  position: relative;
  overflow: hidden;
  margin: auto;
  width: 450px;
  height: 450px;
  border: 8px solid #996633;
  border-radius: 5px;
  background-image: url("tile.png");
  transition: margin 100ms;
}
/*
I use this class to put a red overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaRed::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(255, 0, 0, 0.5);
}
/*
I use this class to put a white overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaWhite::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(255, 255, 255, 0.5);
}
/*
I use this class to put a blue overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaBlue::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(10, 250, 250, 0.5);
}
/*
I use this class to put a green overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaGreen::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(10, 250, 34, 0.5);
}
/*
I use this class to put a orange overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaOrange::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(249, 141, 0, 0.5);
}
/*
I use this class to put a yellow overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaYellow::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(233, 249, 0, 0.5);
}
/*
I use this class to put a purple overlay on top of
the playArea for a flashing visual effect I have*/
.playAreaPurple::after {
  position: absolute;
  content: " ";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: rgba(141, 0, 249, 0.5);
}
/*
Styles the Mathemagicus title on the initial screen*/
#titleDiv {
  font-size: 3.5em;
  font-weight: bold;
  font-family: monospace;
  padding: 10px;
  text-align: center;
  color: red;
  text-shadow: 2px 0px black,
               0px 2px black,
               -2px 0px black,
               0px -2px black;
}
/*
Styles the <table> that holds my two start buttons*/
#newGameButtons {
  margin: auto;
  margin-top: 20px;
}
/*
Styles my two start buttons: "New Game" and "Continue"*/
.startButtons {
  padding: 10px;
  margin: 20px;
  color: white;
  background-color: #555555;
  border: 1px solid black;
  border-radius: 5px;
  box-shadow: 5px 5px 5px black;
  font-size: 1.5em;
  font-weight: bold;
  font-family: monospace;
  text-shadow: 2px 0px black,
               0px 2px black,
               -2px 0px black,
               0px -2px black;
  transition: background-color 250ms;
}
/*
Changes the background color of the buttons when hovered*/
.startButtons:hover {
  background-color: #777777;
}
/*
Styles the text windows for the game*/
.textBox {
  margin: auto;
  margin-top: 15px;
  padding: 10px;
  width: 350px;
  color: white;
  background-color: #555555;
  border: 2px solid black;
  border-radius: 5px;
  box-shadow: 5px 5px 5px black;
  font-size: 1.5em;
  font-weight: bold;
  font-family: monospace;
  text-align: center;
  text-shadow: 2px 0px black,
               0px 2px black,
               -2px 0px black,
               0px -2px black;
}
/*
Styles the text input for the player's name*/
#nameTextBox {
  font-size: 1.25em;
  font-family: monospace;
  text-align: center;
  border: 3px solid #996633;
  border-radius: 5px;
  box-shadow: 5px 5px 5px black;
  margin: 5px;
  width: 200px;
  height: 40px;
}
/*
Styles the <div> that my NPC cameo image is in*/
#cameo {
  margin-top: 15px;
  margin-left: 306px;
  width: 102px;
  height: 102px;
  background-color: #555555;
  border: 2px solid black;
  border-radius: 5px;
  box-shadow: 5px 5px 5px black;
}
/*
I think this is temporary until I resize my cameo image*/
#cameoImg {
  width: 100px;
  height: 100px;
}
/*
Positions and styles the text that goes above
the character selection area*/
#characterSelectText {
  position: absolute;
  left: 128px;
  bottom: 155px;
  font-size: 1.5em;
  font-weight: bold;
  font-family: monospace;
  color: white;
  text-shadow: 2px 0px black,
               0px 2px black,
               -2px 0px black,
               0px -2px black;
}
/*
Styles the buttons that move the character images
during character selection*/
.selectButtons {
  position: absolute;
  font-family: monospace;
  font-size: 2em;
  font-weight: bold;
  bottom: 50px;
  z-index: 2;
  background-color: #999999;
  border: 2px solid black;
  border-radius: 5px;
}
/*
Changes the background color when the mouse hovers
over the butons*/
.selectButtons:hover {
  background-color: #bbbbbb;
}
/*
Positions the left button*/
#leftButton {
  left: 111px;
}
/*
Positions the right button*/
#rightButton {
  left: 304px;
}
/*
The general styling information for the <div>s that
hold the character images during character selection*/
#characterDiv1, #characterDiv2, #characterDiv3 {
  position: absolute;
  padding: 5px;
  height: 100px;
  width: 85px;
  left: 175px;
  bottom: 15px;
  background-color: #555555;
  border: 2px solid black;
  border-radius: 5px;
  box-shadow: 5px 5px 5px black;
  transition: all 500ms;
}
/*
Handles the blinking border for when the mouse hovers
over the character <div>s during character selection*/
@keyframes characterBoxBlink {
  from {border: 2px solid black;}
  to {border: 2px solid white;}
}
/*
Defines the hover styling for the visible <div> during
character selection*/
#characterDiv2:hover {
  background-color: #777777;
  animation-name: characterBoxBlink;
  animation-duration: 500ms;
  animation-iteration-count: infinite;
}
/*
Positions the first <div> outside of the playArea*/
#characterDiv1 {
  left: -120px;
}
/*
Positions the third <div> outside of the playArea*/
#characterDiv3 {
  left: 460px;
}
/*
Defines how the <img>s behave in the character
selection screen*/
.characterImg {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 2px;
  margin: auto;
  z-index: 1;
}
/*
This handles the animation for my blinking "next" button*/
@keyframes nextButtonBlink {
  from {border: 1px solid black;}
  to {border: 1px solid white;}
}
/*
This styles the "next" button I use to advance long text blocks*/
#nextButton {
  color: white;
  font-family: monospace;
  background-color: #777777;
  border: 1px solid black;
  border-radius: 5px;
  animation-name: nextButtonBlink;
  animation-duration: 500ms;
  animation-iteration-count: infinite;
}
/*
The basic styling of my dungeon select <table>*/
#dungeonTable {
  margin: auto;
  border-spacing: 50px 40px;
}
/*
Adds a transition effect to the change in the dungeon
door's brightness*/
#dungeonTable img {
  transition: filter 500ms;
}
/*
Hilights the individual dungeon entrances when the mouse hovers over them*/
#dungeonTable img:hover {
  filter: brightness(140%);
}
/*
This styles the box that tells the player what level of the dungeon they're on*/
#levelDiv {
  margin: auto;
  margin-top: 5px;
  /*padding: 5px;*/
  width: 80px;
  color: white;
  background-color: #555555;
  border: 2px solid black;
  border-radius: 5px;
  box-shadow: 5px 5px 5px black;
  font-size: 1.25em;
  font-weight: bold;
  font-family: monospace;
  text-align: center;
  text-shadow: 2px 0px black,
               0px 2px black,
               -2px 0px black,
               0px -2px black;
}
/*
This adjusts the width of these <div>s from the class to which the belong: .textBox
I might get rid of this later, still not sure...*/
#problemDiv, #hintDiv {
  width: 324px;
}
/*
This styles the area where the spells are displayed*/
#spellBar {
  position: absolute;
  bottom: 140px;
  left: 53px;
  width: 340px;
  height: 30px;
  background-color: grey;
  margin-top: 5px;
  border: 2px solid black;
  border-radius: 5px;
}
/*
This styles the images for the spells*/
#spellBar img {
  border: 1px solid black;
  border-radius: 5px;
  margin: 2px;
  padding: 2px;
  width: 17px;
  /*filter: opacity(10%);*/
}
/*
This controls the behavior of the <div>s inside of the spellBar*/
#spellBar div {
  display: inline-block;
  vertical-align: top;
  margin: auto;
  width: 42px;
  font-size: 1em;
  font-family: monospace;
}

#spellBar div div {
  width: 15px;
}
/*
This is the grey bar behind my green countdown timer */
#countdownBarBack {
  position: absolute;
  bottom: 180px;
  left: 53px;
  width: 340px;
  height: 30px;
  background-color: grey;
  margin-top: 5px;
  border: 2px solid black;
  border-radius: 5px;
}
/*
This is the green countdown timer bar */
#countdownBarFront {
  position: absolute;
  width: 340px;
  height: 30px;
  background-color: #66ff33;
  border-radius: 5px;
}
/*
This displays the time remaining for the countdown timer*/
#countdownTimer {
  position: absolute;
  top: 3px;
  width: 100%;
  color: white;
  text-align: center;
  text-shadow: 2px 0px 2px black,
               0px 2px 2px black,
               -2px 0px 2px black,
               0px -2px 2px black;
  font-size: 20px;
  font-family: monospace;
}
/*
This formats the invisible <div> that holds the player and monster health
and the player and monster images*/
#combatDiv {
  left: 55px;
  position: absolute;
  bottom: 4px;
}
/*
The grey background container for the player and computer health bar */
#healthBarBack, #monsterHealthBarBack {
  display: inline-block;
  width: 30px;
  height: 110px;
  margin-top: 11px;
  background-color: grey;
  vertical-align: top;
  border: 2px solid black;
  border-radius: 5px;
  position: relative;
}
/*
Styles the red health bar for the player and computer */
#healthBarFront, #monsterHealthBarFront {
  vertical-align: bottom;
  width: 30px;
  height: 110px;
  background-color: red;
  border-radius: 5px;
  position: absolute;
  bottom: 0;
  transition: height 1s;
}
/*
This styles the <div>s that contain the player and monster images*/
#playerDiv, #monsterDiv {
  display: inline-block;
  position: relative;
  background-color: grey;
  margin: 11px;
  padding: 5px;
  height: 100px;
  width: 100px;
  border: 3px solid black;
  border-radius: 5px;
}
/*
This ensures that the player and monster images are centered
and flush to the bottom of their containers*/
#playerImg, #monsterImg {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 2px;
  margin: auto;
  z-index: 1;
}
/*
This controls the look and position of the blast sprite
that flashes when an enemy is hit*/
#blast {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 15px;
  margin: auto;
  z-index: 2;
}
/*
This controls the look and position of the slash sprite
that flashes when the player is hit*/
#slash {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 5px;
  margin: auto;
  z-index: 2;
}
/*
This sets the size of the answerInput <input> box
and makes sure the numbers are centered in the box*/
#answerInput {
  width: 50px;
  text-align: center;
}
/*
This styles the scroll that pops up when a player
learns a new spell*/
#scrollDiv {
  position: absolute;
  top: 25px;
  left: 66px;
  z-index: 2;
  transition: filter 1000ms;
}
/*
This handles the fade in for when the scroll appears
on screen
#scrollImg {
  transition: filter 1000ms;
}*/

/*
This handles the positioning and style of
the button that shows up on the scrolls.
It borrows the animations from my other
next buttons*/
#scrollNextButton {
  position: absolute;
  left: 131px;
  bottom: 50px;
  background-color: rgba(0,0,0,0.125);
  border-radius: 5px;
  border: 1px solid black;
  animation-name: nextButtonBlink;
  animation-duration: 500ms;
  animation-iteration-count: infinite;
}
